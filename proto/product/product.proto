syntax = "proto3";
package product;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";

// это «витрина» магазина
// добавить seed данных для создания множества товаров

option go_package = "github.com/IbadT/trans_history_microservice/project-protos/proto/product";

service ProductService {
    // получить список товаров(пагинация)
    rpc ListProducts(ListProductsRequest) returns (ListProductsResponse);
    // получить товар по id
    rpc GetProductByID(GetProductByIDRequest) returns (GetCartByIdResponse);
    // найти товар по фильтрам
    rpc SearchProductsByFilter(SearchProductByFilterRequest) returns (SearchProductByFilterResponse);
    // создать товар
    rpc CreateProduct(CreateProductRequest) returns (CreateProductResponse);
    // загрузись картинку
    rpc UploadProductImg(UploadProductImgRequest) returns (UploadProductImgResponse);

    rpc UpdateProductTitle(UpdateProductTitleRequest) returns (UpdateProductTitleResponse);
    rpc UpdateProductPrice(UpdateProductPriceRequest) returns (UpdateProductPriceResponse);
    rpc DeleteProduct(DeleteCatalogRequest) returns (google.protobuf.Empty);

    rpc CreateCategory(CreateCategoryRequest) returns (CreateCategoryResponse);
    rpc ListCategories(google.protobuf.Empty) returns (ListCategoriesResponse);
}
// Категории, фильтры, атрибуты, изображения
// Category
// Brand
// Attribute
// Recommendation




message Product {
    string id = 1;
    string title = 2;
    float price = 3;
    string description = 4;
    float rating = 5;
    string imageUrl = 6;
    string mimetype = 7;
    float oldPrice = 8;
    int32 count = 9;
    string code = 10;
    string categoryId = 11;
}

message SearchProductByFilterRequest {
    google.protobuf.StringValue title = 1;
    google.protobuf.Int32Value minPrice = 2;
    google.protobuf.Int32Value maxPrice = 3;
    google.protobuf.StringValue categoryId = 4;
}

message SearchProductByFilterResponse {
    repeated Product products = 1;
}

message GetProductByIDRequest {
    string id = 1;
}

message GetCartByIdResponse {
    Product product = 1;
}

message ListProductsRequest {
    int32 limit = 1;
    int32 offset = 2;
}

message ListProductsResponse {
    int32 limit = 1;
    int32 offset = 2;
    int32 total = 3;
    repeated Product products = 4;
}

message CreateProductRequest {
    string title = 1;
    float price = 2;
    float currentPrice = 3;
    int32 count = 4;
    int32 code = 5;
    
    string description = 6;

    string categoryId = 7;
}

message CreateProductResponse {
    Product product = 1;
}

message UploadProductImgRequest {
    string id = 1;
    bytes img = 2;
    string mimetype = 3;
}

message UploadProductImgResponse {
    string imageUrl = 1;
}



message UpdateProductTitleRequest {
    string id = 1;
    string title = 2;
    
}
message UpdateProductTitleResponse {
    Product product = 1;
}

message UpdateProductPriceRequest {
    string id = 1;
    float price = 2;
    float oldPrice = 3; 
}
message UpdateProductPriceResponse {
    Product product = 1;
}

message DeleteCatalogRequest {
    string id = 1;
}









message Category {
    string id = 1;
    string categoryName = 2;
}

message CreateCategoryRequest {
    Category category = 1;
}

message CreateCategoryResponse {
    Category category = 1;
}


message ListCategoriesResponse {
    repeated Category categories = 1;
}
